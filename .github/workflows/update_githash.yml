# This is a basic workflow to help you get started with Actions

name: update_githash

# Controls when the action will run. Triggers the workflow on push or pull request
# events but only for the master branch
on:
  push

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  build:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v2

      # Runs a single command using the runners shell
      - name: Run a one-line script
        run: echo Hello, world!
        
      - name: Declare git variables
        id: vars
        shell: bash
        run: |
          echo "##[set-output name=branch;]$(echo ${GITHUB_REF#refs/heads/})"
          echo "::set-output name=sha_short::$(git rev-parse --short HEAD)"

      - name: Another step
        run: |
          echo "Branch: ${{ steps.vars.outputs.branch }}"
          echo "Sha: ${{ steps.vars.outputs.sha_short }}"

      - uses: actions/github-script@0.3.0
        id: author-date
        with:
          github-token: ${{secrets.GITHUB_TOKEN}}
          script: |
            const commit_details = await github.git.getCommit({owner: context.repo.owner, repo: context.repo.repo, commit_sha: context.sha});
            return commit_details.data.author.date
      - run: echo "##[set-output name=commited_at;]$(echo $COMMITTED_AT)"  
        env:
          COMMITTED_AT: ${{ steps.author-date.outputs.result }}

      - name: Final message
        run: |
          echo "Draft ${{ steps.vars.outputs.sha_short }} on ${{ steps.vars.outputs.commited_at }}"
          echo "Draft ${{ steps.vars.outputs.sha_short }} on ${{ steps.vars.outputs.commited_at }}" >> .githash.txt

      - name: Commit files # commit the output folder
        run: |
          git config --local user.email "test@github.com"
          git config --local user.name "GitHub Action test"
          git add .githash.txt
          git commit -m "Update githash"
      - name: Push changes # push the output folder to your repo
        uses: ad-m/github-push-action@master
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          force: true
